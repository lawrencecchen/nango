{
    "name": "@nangohq/nango",
    "type": "module",
    "version": "0.39.32",
    "workspaces": [
        "packages/cli",
        "packages/shared",
        "packages/frontend",
        "packages/kvstore",
        "packages/logs",
        "packages/node-client",
        "packages/records",
        "packages/server",
        "packages/runner",
        "packages/scheduler",
        "packages/orchestrator",
        "packages/persist",
        "packages/jobs",
        "packages/webapp",
        "packages/utils",
        "packages/data-ingestion",
        "packages/types",
        "packages/database",
        "packages/webhooks"
    ],
    "scripts": {
        "create:migration": "cd packages/database/lib && knex migrate:make $1 --esm --knexfile ./knexfile.cjs",
        "undo:migration": "cd packages/database/lib && knex migrate:rollback --esm --knexfile ./knexfile.cjs",
        "prettier-format": "prettier --config .prettierrc \"./**/*.{ts,tsx}\" --write",
        "prettier-watch": "onchange './**/*.{ts,tsx}' -- prettier --write {{changed}}",
        "lint": "eslint . --ext .ts,.tsx",
        "lint:fix": "eslint . --ext .ts,.tsx --fix",
        "ts-build": "tsc -b tsconfig.build.json && npm run -w nango postbuild",
        "ts-build:docker": "tsc -b tsconfig.docker.json",
        "ts-clean": "npx rimraf packages/*/tsconfig.tsbuildinfo packages/*/dist",
        "docker-build": "docker build -f packages/server/Dockerfile -t nango-server:latest .",
        "webapp-build:hosted": "cd ./packages/webapp && npm run build:hosted && cd ../..",
        "webapp-build:staging": "cd ./packages/webapp && npm run build:staging && cd ../..",
        "webapp-build:prod": "cd ./packages/webapp && npm run build:prod && cd ../..",
        "webapp-build:enterprise": "cd ./packages/webapp && npm run build:enterprise && cd ../..",
        "webapp-build:watch": "tsc -b -w packages/webapp/tsconfig.json",
        "docker-build:unified": "./scripts/build_docker.sh",
        "build:hosted": "npm ci && npm run ts-build && npm run webapp-build:hosted",
        "build:staging": "npm ci && npm run ts-build && npm run webapp-build:staging",
        "build:prod": "npm ci && npm run ts-build && npm run webapp-build:prod",
        "build:enterprise": "npm ci && npm run ts-build && npm run webapp-build:enterprise",
        "server:dev:watch": "cd ./packages/server && npm run dev",
        "jobs:dev:watch": "npm run dev -w @nangohq/nango-jobs",
        "persist:dev:watch": "npm run dev -w @nangohq/nango-persist",
        "orchestrator:dev:watch": "npm run dev -w @nangohq/nango-orchestrator",
        "webapp:dev:watch": "cd ./packages/webapp && npm run start:local",
        "prepare": "husky install",
        "build:watch": "tsc -b -w --preserveWatchOutput tsconfig.build.json",
        "dev:watch": "npm run -w nango copy:files && npm run build:watch",
        "watch:dev": "npm run dev:watch",
        "dev:watch:apps": "concurrently --names 'srv,web,job,prs,orc' --kill-others \"npm run server:dev:watch\" \"npm run webapp:dev:watch\" \"npm run jobs:dev:watch\" \"npm run persist:dev:watch\" \"npm run orchestrator:dev:watch\"",
        "watch:dev:apps": "npm run dev:watch:apps",
        "dw": "npm run dev:watch",
        "dwa": "npm run dev:watch:apps",
        "test": "concurrently --kill-others \"npm run test:unit\" \"npm run test:integration\" \"npm run test:cli\"",
        "test:unit": "vitest --run",
        "test:integration": "vitest --config ./vite.integration.config.ts --run",
        "test:cli": "vitest --config ./vite.cli.config.ts --run packages/cli/lib/sync.unit.cli-test.ts",
        "docs": "cd ./docs-v2 && npx mintlify dev --port 3033",
        "nango": "cd ./packages/server && npm run nango",
        "dev:docker": "docker compose --file dev/docker-compose.dev.yaml up -d"
    },
    "devDependencies": {
        "@tsconfig/node18-strictest-esm": "^1.0.1",
        "@types/js-yaml": "^4.0.9",
        "@types/node": "^20.14.5",
        "@typescript-eslint/eslint-plugin": "7.7.1",
        "@typescript-eslint/parser": "7.7.1",
        "concurrently": "^8.0.1",
        "eslint": "8.56.0",
        "eslint-config-prettier": "9.1.0",
        "eslint-plugin-import": "2.29.1",
        "eslint-plugin-prettier": "5.1.3",
        "eslint-plugin-react": "7.33.2",
        "eslint-plugin-react-hooks": "4.6.0",
        "git-cliff": "2.2.1",
        "husky": "8.0.3",
        "js-yaml": "4.1.0",
        "lint-staged": "15.2.2",
        "onchange": "7.1.0",
        "prettier": "^3.2.5",
        "rimraf": "5.0.1",
        "testcontainers": "^9.12.0",
        "tsx": "^4.6.2",
        "typescript": "^5.3.3",
        "vitest": "0.33.0",
        "zx": "8.0.2"
    },
    "lint-staged": {
        "*.{js,jsx,ts,tsx,ejs,cjs}": [
            "eslint --fix --quiet"
        ],
        "*.{html,css,json,yaml}": [
            "prettier --write"
        ]
    },
    "engines": {
        "node": ">=18.0.0 || >=20.0.0"
    }
}
