import type { ClassValue } from 'clsx';

import type { Flow, SyncResult, NangoSyncModel } from '../types';
export declare const localhostUrl: string;
export declare const stagingUrl: string;
export declare const prodUrl: string;
export declare const syncDocs = 'https://docs.nango.dev/integrate/guides/sync-data-from-an-api';
export declare const AUTH_ENABLED: boolean;
export declare const MANAGED_AUTH_ENABLED: boolean;
export declare function isHosted(): boolean;
export declare function isEnterprise(): boolean;
export declare function isStaging(): boolean;
export declare function isProd(): boolean;
export declare function isCloud(): boolean;
export declare function isLocal(): boolean;
export declare function baseUrl(): string;
export declare function defaultCallback(): string;
export declare function elapsedTime(start: Date | number, end: Date | number): string;
export declare function formatDateToShortUSFormat(dateString: string): string;
export declare function formatDateToUSFormat(dateString: string): string;
export declare function formatDateToLogFormat(dateString: string): string;
export declare function interpretNextRun(futureRuns: number[], previousRun?: string): string | string[];
export declare function parseLatestSyncResult(result: SyncResult, models: string[]): string;
export declare function getRunTime(created_at: string, updated_at: string): string;
export declare function createExampleForType(type: string): any;
export declare function generateExampleValueForProperty(model: NangoSyncModel): Record<string, boolean | string | number>;
export declare const parseInput: (flow: Flow) => any;
export declare function generateResponseModel(models: NangoSyncModel[], output: string | undefined, isSync: boolean): Record<string, any>;
export declare function cn(...inputs: ClassValue[]): string;
export declare function formatQuantity(quantity: number): string;
export declare function formatFrequency(frequency: string): string;
export declare function stringArrayEqual(prev: string[], next: string[]): boolean;
