import { z } from 'zod';
export declare const ENVS: z.ZodObject<
    {
        NODE_ENV: z.ZodDefault<z.ZodEnum<['production', 'staging', 'development', 'test']>>;
        CI: z.ZodDefault<z.ZodBoolean>;
        VITEST: z.ZodDefault<z.ZodBoolean>;
        TZ: z.ZodDefault<z.ZodString>;
        WORKOS_API_KEY: z.ZodOptional<z.ZodString>;
        WORKOS_CLIENT_ID: z.ZodOptional<z.ZodString>;
        NANGO_DASHBOARD_USERNAME: z.ZodOptional<z.ZodString>;
        NANGO_DASHBOARD_PASSWORD: z.ZodOptional<z.ZodString>;
        LOCAL_NANGO_USER_ID: z.ZodOptional<z.ZodNumber>;
        NANGO_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        SERVER_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        NANGO_SERVER_URL: z.ZodOptional<z.ZodString>;
        DEFAULT_RATE_LIMIT_PER_MIN: z.ZodOptional<z.ZodNumber>;
        NANGO_CACHE_ENV_KEYS: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_SERVER_WEBSOCKETS_PATH: z.ZodOptional<z.ZodString>;
        NANGO_ADMIN_INVITE_TOKEN: z.ZodOptional<z.ZodString>;
        PERSIST_SERVICE_URL: z.ZodOptional<z.ZodString>;
        NANGO_PERSIST_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        ORCHESTRATOR_SERVICE_URL: z.ZodOptional<z.ZodString>;
        NANGO_ORCHESTRATOR_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        ORCHESTRATOR_DATABASE_URL: z.ZodOptional<z.ZodString>;
        ORCHESTRATOR_DATABASE_SCHEMA: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        JOBS_SERVICE_URL: z.ZodOptional<z.ZodString>;
        NANGO_JOBS_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        RUNNER_SERVICE_URL: z.ZodOptional<z.ZodString>;
        NANGO_RUNNER_PATH: z.ZodOptional<z.ZodString>;
        RUNNER_OWNER_ID: z.ZodOptional<z.ZodString>;
        RUNNER_ID: z.ZodOptional<z.ZodString>;
        IDLE_MAX_DURATION_MS: z.ZodDefault<z.ZodNumber>;
        DEFAULT_GITHUB_CLIENT_ID: z.ZodOptional<z.ZodString>;
        DEFAULT_GITHUB_CLIENT_SECRET: z.ZodOptional<z.ZodString>;
        AWS_REGION: z.ZodOptional<z.ZodString>;
        AWS_BUCKET_NAME: z.ZodOptional<z.ZodString>;
        AWS_ACCESS_KEY_ID: z.ZodOptional<z.ZodString>;
        DD_ENV: z.ZodOptional<z.ZodString>;
        DD_SITE: z.ZodOptional<z.ZodString>;
        DD_TRACE_AGENT_URL: z.ZodOptional<z.ZodString>;
        NANGO_LOGS_ES_URL: z.ZodOptional<z.ZodString>;
        NANGO_LOGS_ES_USER: z.ZodOptional<z.ZodString>;
        NANGO_LOGS_ES_PWD: z.ZodOptional<z.ZodString>;
        NANGO_LOGS_ENABLED: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_LOGS_ES_INDEX: z.ZodOptional<z.ZodString>;
        MAILGUN_API_KEY: z.ZodOptional<z.ZodString>;
        NANGO_DATABASE_URL: z.ZodOptional<z.ZodString>;
        NANGO_DB_HOST: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_DB_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
        NANGO_DB_USER: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_DB_NAME: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_DB_PASSWORD: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_DB_SSL: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_DB_CLIENT: z.ZodOptional<z.ZodString>;
        NANGO_ENCRYPTION_KEY: z.ZodOptional<z.ZodString>;
        NANGO_DB_MIGRATION_FOLDER: z.ZodOptional<z.ZodString>;
        NANGO_DB_SCHEMA: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_DB_ADDITIONAL_SCHEMAS: z.ZodOptional<z.ZodString>;
        RECORDS_DATABASE_URL: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        RECORDS_DATABASE_SCHEMA: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        NANGO_REDIS_URL: z.ZodOptional<z.ZodString>;
        RENDER_API_KEY: z.ZodOptional<z.ZodString>;
        IS_RENDER: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_ADMIN_CONNECTION_ID: z.ZodOptional<z.ZodString>;
        NANGO_SLACK_INTEGRATION_KEY: z.ZodOptional<z.ZodString>;
        NANGO_ADMIN_UUID: z.ZodOptional<z.ZodString>;
        SENTRY_DNS: z.ZodOptional<z.ZodString>;
        TEMPORAL_NAMESPACE: z.ZodDefault<z.ZodOptional<z.ZodString>>;
        TEMPORAL_ADDRESS: z.ZodOptional<z.ZodString>;
        TEMPORAL_WORKER_MAX_CONCURRENCY: z.ZodDefault<z.ZodNumber>;
        SERVER_RUN_MODE: z.ZodOptional<z.ZodEnum<['DOCKERIZED', '']>>;
        NANGO_CLOUD: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_ENTERPRISE: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_TELEMETRY_SDK: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        NANGO_ADMIN_KEY: z.ZodOptional<z.ZodString>;
        NANGO_INTEGRATIONS_FULL_PATH: z.ZodOptional<z.ZodString>;
        TELEMETRY: z.ZodEffects<z.ZodDefault<z.ZodOptional<z.ZodEnum<['true', 'false', '']>>>, boolean, '' | 'false' | 'true'>;
        LOG_LEVEL: z.ZodDefault<z.ZodOptional<z.ZodEnum<['info', 'debug', 'warn', 'error']>>>;
    },
    'strip',
    z.ZodTypeAny,
    {
        NODE_ENV?: 'test' | 'production' | 'staging' | 'development';
        CI?: boolean;
        VITEST?: boolean;
        TZ?: string;
        WORKOS_API_KEY?: string;
        WORKOS_CLIENT_ID?: string;
        NANGO_DASHBOARD_USERNAME?: string;
        NANGO_DASHBOARD_PASSWORD?: string;
        LOCAL_NANGO_USER_ID?: number;
        NANGO_PORT?: number;
        SERVER_PORT?: number;
        NANGO_SERVER_URL?: string;
        DEFAULT_RATE_LIMIT_PER_MIN?: number;
        NANGO_CACHE_ENV_KEYS?: boolean;
        NANGO_SERVER_WEBSOCKETS_PATH?: string;
        NANGO_ADMIN_INVITE_TOKEN?: string;
        PERSIST_SERVICE_URL?: string;
        NANGO_PERSIST_PORT?: number;
        ORCHESTRATOR_SERVICE_URL?: string;
        NANGO_ORCHESTRATOR_PORT?: number;
        ORCHESTRATOR_DATABASE_URL?: string;
        ORCHESTRATOR_DATABASE_SCHEMA?: string;
        JOBS_SERVICE_URL?: string;
        NANGO_JOBS_PORT?: number;
        RUNNER_SERVICE_URL?: string;
        NANGO_RUNNER_PATH?: string;
        RUNNER_OWNER_ID?: string;
        RUNNER_ID?: string;
        IDLE_MAX_DURATION_MS?: number;
        DEFAULT_GITHUB_CLIENT_ID?: string;
        DEFAULT_GITHUB_CLIENT_SECRET?: string;
        AWS_REGION?: string;
        AWS_BUCKET_NAME?: string;
        AWS_ACCESS_KEY_ID?: string;
        DD_ENV?: string;
        DD_SITE?: string;
        DD_TRACE_AGENT_URL?: string;
        NANGO_LOGS_ES_URL?: string;
        NANGO_LOGS_ES_USER?: string;
        NANGO_LOGS_ES_PWD?: string;
        NANGO_LOGS_ENABLED?: boolean;
        NANGO_LOGS_ES_INDEX?: string;
        MAILGUN_API_KEY?: string;
        NANGO_DATABASE_URL?: string;
        NANGO_DB_HOST?: string;
        NANGO_DB_PORT?: number;
        NANGO_DB_USER?: string;
        NANGO_DB_NAME?: string;
        NANGO_DB_PASSWORD?: string;
        NANGO_DB_SSL?: boolean;
        NANGO_DB_CLIENT?: string;
        NANGO_ENCRYPTION_KEY?: string;
        NANGO_DB_MIGRATION_FOLDER?: string;
        NANGO_DB_SCHEMA?: string;
        NANGO_DB_ADDITIONAL_SCHEMAS?: string;
        RECORDS_DATABASE_URL?: string;
        RECORDS_DATABASE_SCHEMA?: string;
        NANGO_REDIS_URL?: string;
        RENDER_API_KEY?: string;
        IS_RENDER?: boolean;
        NANGO_ADMIN_CONNECTION_ID?: string;
        NANGO_SLACK_INTEGRATION_KEY?: string;
        NANGO_ADMIN_UUID?: string;
        SENTRY_DNS?: string;
        TEMPORAL_NAMESPACE?: string;
        TEMPORAL_ADDRESS?: string;
        TEMPORAL_WORKER_MAX_CONCURRENCY?: number;
        SERVER_RUN_MODE?: '' | 'DOCKERIZED';
        NANGO_CLOUD?: boolean;
        NANGO_ENTERPRISE?: boolean;
        NANGO_TELEMETRY_SDK?: boolean;
        NANGO_ADMIN_KEY?: string;
        NANGO_INTEGRATIONS_FULL_PATH?: string;
        TELEMETRY?: boolean;
        LOG_LEVEL?: 'error' | 'debug' | 'info' | 'warn';
    },
    {
        NODE_ENV?: 'test' | 'production' | 'staging' | 'development';
        CI?: boolean;
        VITEST?: boolean;
        TZ?: string;
        WORKOS_API_KEY?: string;
        WORKOS_CLIENT_ID?: string;
        NANGO_DASHBOARD_USERNAME?: string;
        NANGO_DASHBOARD_PASSWORD?: string;
        LOCAL_NANGO_USER_ID?: number;
        NANGO_PORT?: number;
        SERVER_PORT?: number;
        NANGO_SERVER_URL?: string;
        DEFAULT_RATE_LIMIT_PER_MIN?: number;
        NANGO_CACHE_ENV_KEYS?: '' | 'false' | 'true';
        NANGO_SERVER_WEBSOCKETS_PATH?: string;
        NANGO_ADMIN_INVITE_TOKEN?: string;
        PERSIST_SERVICE_URL?: string;
        NANGO_PERSIST_PORT?: number;
        ORCHESTRATOR_SERVICE_URL?: string;
        NANGO_ORCHESTRATOR_PORT?: number;
        ORCHESTRATOR_DATABASE_URL?: string;
        ORCHESTRATOR_DATABASE_SCHEMA?: string;
        JOBS_SERVICE_URL?: string;
        NANGO_JOBS_PORT?: number;
        RUNNER_SERVICE_URL?: string;
        NANGO_RUNNER_PATH?: string;
        RUNNER_OWNER_ID?: string;
        RUNNER_ID?: string;
        IDLE_MAX_DURATION_MS?: number;
        DEFAULT_GITHUB_CLIENT_ID?: string;
        DEFAULT_GITHUB_CLIENT_SECRET?: string;
        AWS_REGION?: string;
        AWS_BUCKET_NAME?: string;
        AWS_ACCESS_KEY_ID?: string;
        DD_ENV?: string;
        DD_SITE?: string;
        DD_TRACE_AGENT_URL?: string;
        NANGO_LOGS_ES_URL?: string;
        NANGO_LOGS_ES_USER?: string;
        NANGO_LOGS_ES_PWD?: string;
        NANGO_LOGS_ENABLED?: '' | 'false' | 'true';
        NANGO_LOGS_ES_INDEX?: string;
        MAILGUN_API_KEY?: string;
        NANGO_DATABASE_URL?: string;
        NANGO_DB_HOST?: string;
        NANGO_DB_PORT?: number;
        NANGO_DB_USER?: string;
        NANGO_DB_NAME?: string;
        NANGO_DB_PASSWORD?: string;
        NANGO_DB_SSL?: '' | 'false' | 'true';
        NANGO_DB_CLIENT?: string;
        NANGO_ENCRYPTION_KEY?: string;
        NANGO_DB_MIGRATION_FOLDER?: string;
        NANGO_DB_SCHEMA?: string;
        NANGO_DB_ADDITIONAL_SCHEMAS?: string;
        RECORDS_DATABASE_URL?: string;
        RECORDS_DATABASE_SCHEMA?: string;
        NANGO_REDIS_URL?: string;
        RENDER_API_KEY?: string;
        IS_RENDER?: '' | 'false' | 'true';
        NANGO_ADMIN_CONNECTION_ID?: string;
        NANGO_SLACK_INTEGRATION_KEY?: string;
        NANGO_ADMIN_UUID?: string;
        SENTRY_DNS?: string;
        TEMPORAL_NAMESPACE?: string;
        TEMPORAL_ADDRESS?: string;
        TEMPORAL_WORKER_MAX_CONCURRENCY?: number;
        SERVER_RUN_MODE?: '' | 'DOCKERIZED';
        NANGO_CLOUD?: '' | 'false' | 'true';
        NANGO_ENTERPRISE?: '' | 'false' | 'true';
        NANGO_TELEMETRY_SDK?: '' | 'false' | 'true';
        NANGO_ADMIN_KEY?: string;
        NANGO_INTEGRATIONS_FULL_PATH?: string;
        TELEMETRY?: '' | 'false' | 'true';
        LOG_LEVEL?: 'error' | 'debug' | 'info' | 'warn';
    }
>;
export declare function parseEnvs<T extends z.ZodObject<any>>(schema: T, envs?: Record<string, unknown>): z.SafeParseSuccess<z.infer<T>>['data'];
